--ROWID : 테이블에서 행의 위치를 지정하는 논리적인 주소값
SELECT ROWID, empno, ename
FROM emp;

--Table 생성, 수정, 삭제
CREATE TABLE EMP02 (
    EMPNO NUMBER(4),
    ENAME VARCHAR2(20),
    SAL NUMBER(7, 2)
);

SELECT * FROM EMP02;

DESC EMP02;

CREATE TABLE DEPT01 (
    DEPTNO NUMBER(2),
    DNAME VARCHAR2(14),
    LOC VARCHAR2(13)
);

DESC DEPT01;

--SUBQUERY로 TABLE 생성
CREATE TABLE EMP01
AS
SELECT * FROM EMP;

DESC EMP01;

SELECT * FROM EMP01;

--SUBQUERY로 특정 속성만 선택하여 TABLE 생성
CREATE TABLE EMP03
AS
SELECT EMPNO, ENAME FROM EMP;

DESC EMP03;

SELECT * FROM EMP03;

CREATE TABLE EMP04
AS
SELECT EMPNO, ENAME, SAL
FROM EMP;

DESC EMP04;

SELECT * FROM EMP04;

CREATE TABLE EMP05
AS
SELECT * FROM EMP
WHERE DEPTNO=10;

SELECT * FROM EMP05;

--SUBQUERY 사용하면서 SCHEMA는 복사하지만 데이터는 복사하지 않는 경우
CREATE TABLE EMP06
AS
SELECT * FROM EMP WHERE 1=0;

DESC EMP06;

SELECT * FROM EMP06;

CREATE TABLE DEPT02
AS
SELECT * FROM DEPT WHERE 1=0;

DESC DEPT02;

SELECT * FROM DEPT02;

--ALTER TABLE : 테이블 수정
DESC EMP02;

ALTER TABLE EMP02
ADD(JOB VARCHAR2(9));

DESC EMP02;

ALTER TABLE DEPT02
ADD(DMGR NUMBER(4));

DESC DEPT02;

ALTER TABLE EMP02
MODIFY (JOB VARCHAR2(30));

DESC EMP02;

DESC DEPT02;

ALTER TABLE DEPT02
MODIFY(DMGR VARCHAR2(4));

--기존 컬럼(속성) 삭제하기
DESC EMP02;

ALTER TABLE EMP02
DROP COLUMN JOB;

DESC DEPT02;

ALTER TABLE DEPT02
DROP COLUMN DMGR;

--SET UNUSED
ALTER TABLE EMP01
SET UNUSED(JOB);

DESC EMP01;

SELECT * FROM EMP01;

ALTER TABLE EMP01
DROP UNUSED COLUMNS;

--TABLE 삭제
DESC EMP06;

DROP TABLE EMP06;

SELECT * FROM EMP01;

--TABLE의 데이터만 삭제
TRUNCATE TABLE EMP01;

DELETE EMP01;

DESC EMP01;

--RENAME : TABLE 이름 변경
RENAME EMP02 TO TEST;

DESC TEST;

SELECT * FROM TEST;

DROP TABLE TEST;

--DATE DICTIONARY(데이터사전) : oracle이 생성/수정/삭제 등을 하는 시스템 테이블
--사용자가 만든 database, table 등의 정보를 관리하는 시스템 테이블
--(ex. scott, madang 등의 계정과 테이블들의 정보를 관리)
DESC USER_TABLES;

SHOW USER;

SELECT TABLE_NAME
FROM USER_TABLES
ORDER BY TABLE_NAME DESC;

--ALL_TABLES
DESC ALL_TABLES;

SELECT OWNER, TABLE_NAME
FROM ALL_TABLES;

--DBA_TABLES(conn sys)
SELECT TABLE_NAME, OWNER
FROM DBA_TABLES;


--DML(Data Manipulation Language)
DESC DEPT01;
SELECT * FROM DEPT01;

INSERT INTO DEPT01 (DEPTNO, DNAME, LOC)
VALUES (10, 'ACCOUNTING', 'NEW YORK');

INSERT INTO DEPT01 (DNAME, DEPTNO, LOC)
VALUES ('HR', 20, 'BOSTON');

INSERT INTO DEPT01 (DEPTNO, DNAME, LOC)
VALUES(30, 'SALES', 50);

DELETE FROM DEPT01 WHERE LOC=TO_CHAR(50);

--속성값으로 NULL 입력하기
DESC DEPT;

ALTER TABLE DEPT
MODIFY(DEPTNO NUMBER(2) PRIMARY KEY);

SELECT * FROM DEPT;

DESC DEPT01;

INSERT INTO DEPT01 (DEPTNO, DNAME)
VALUES(40, 'OPERATIONS');

SELECT * FROM DEPT01;

INSERT INTO DEPT01 (DEPTNO, DNAME, LOC)
VALUES (50, 'OP2', NULL);

INSERT INTO DEPT01 (DEPTNO, DNAME, LOC)
VALUES (60, 'OP3', '');

DROP TABLE DEPT01;

CREATE TABLE DEPT01
AS
SELECT * FROM DEPT WHERE 1=0;

SELECT * FROM DEPT01;

--서브쿼리로 데이터 삽입하기
INSERT INTO DEPT01
SELECT * FROM DEPT;

DROP TABLE EMP01;

CREATE TABLE EMP01
AS
SELECT * FROM EMP WHERE 1=0;

SELECT * FROM EMP01;

--SUBQUERY 사용하여 EMP TABLE의 DEPTNO가 10인 것만 INSERT
INSERT INTO EMP01
SELECT * FROM EMP WHERE DEPTNO = 10;

--INSERT ALL 명령어로 다중 테이블에 다중행 입력하기
CREATE TABLE EMP_HR
AS
SELECT EMPNO, ENAME, HIREDATE FROM EMP WHERE 1=0;

SELECT * FROM EMP_HR;

DESC EMP_HR;

CREATE TABLE EMP_MGR
AS
SELECT EMPNO, ENAME, MGR FROM EMP WHERE 1=0;

DESC EMP_MGR;

INSERT ALL
INTO EMP_HR VALUES (EMPNO, ENAME, HIREDATE)
INTO EMP_MGR VALUES (EMPNO, ENAME, MGR)
SELECT  EMPNO, ENAME, HIREDATE, MGR FROM EMP WHERE DEPTNO=20;

SELECT * FROM EMP_HR;
SELECT * FROM EMP_MGR;

--INSERT ALL 두 번째 예(WHEN 사용)
CREATE TABLE EMP_HR02
AS
SELECT EMPNO, ENAME, HIREDATE FROM EMP WHERE 1=0;

DESC EMP_HR02;

SELECT * FROM EMP_HR02;

CREATE TABLE EMP_SAL
AS
SELECT EMPNO, ENAME, SAL FROM EMP WHERE 1=0;

DESC EMP_SAL;

SELECT * FROM EMP_SAL;

INSERT ALL
WHEN HIREDATE > '1982/01/01' THEN
INTO EMP_HR02 VALUES(EMPNO, ENAME, HIREDATE)
WHEN SAL > 2000 THEN
INTO EMP_SAL VALUES(EMPNO, ENAME, SAL)
SELECT EMPNO, ENAME, HIREDATE, SAL FROM EMP;

SELECT * FROM EMP_HR02;
SELECT * FROM EMP_SAL;

--UPDATE : TABLE의 속성값 수정
SELECT * FROM EMP01;

TRUNCATE TABLE EMP01;

INSERT INTO EMP01
SELECT * FROM EMP;

UPDATE EMP01
SET DEPTNO = 30;

SELECT * FROM EMP01;

UPDATE EMP01
SET SAL = SAL * 1.1;

--모든 사원의 입사일자를 오늘로 수정
UPDATE EMP01
SET HIREDATE = SYSDATE;

ROLLBACK;

SELECT * FROM EMP01;

INSERT INTO EMP01
SELECT * FROM EMP;

COMMIT;

--WHERE절 사용하여 특정 행만 수정
UPDATE EMP01
SET DEPTNO = 30
WHERE DEPTNO = 10;

--SAL이 3000이상인 사람만 10% 인상
UPDATE EMP01
SET SAL = SAL * 1.1
WHERE SAL >= 3000;

--83년 입사자만 입사일을 오늘로 변경
UPDATE EMP01
SET HIREDATE = SYSDATE
WHERE SUBSTR(HIREDATE, 1, 2) = '83';

ROLLBACK;

--SCOTT 사원의 DEPTNO를 30으로 변경하고 JOB을 MANAGER로 변경
UPDATE EMP01
SET DEPTNO = 30, JOB = 'MANAGER'
WHERE ENAME = 'SCOTT';

SELECT * FROM EMP01;

--SCOTT 사원의 입사일자를 오늘, 급여를 200인상, 커미션을 2000으로 변경
UPDATE EMP01
SET HIREDATE = SYSDATE, SAL = SAL + 200, COMM = 2000
WHERE ENAME = 'SCOTT';

--SUBQUERY를 사용하여 UPDATE
SELECT * FROM DEPT01;

UPDATE DEPT01
SET (DNAME, LOC) = (SELECT DNAME, LOC FROM DEPT WHERE DEPTNO = 40)
WHERE DEPTNO = 20;

--DELETE : 테이블의 행을 삭제
--모든 행을 삭제
DELETE FROM DEPT01;

SELECT * FROM DEPT01;

ROLLBACK;

--부서코드가 30인 행만 삭제
DELETE FROM DEPT01 WHERE DEPTNO=30;

DELETE FROM EMP01
WHERE COMM IS NULL AND SAL <= 1000;

SELECT * FROM EMP01;

ROLLBACK;

--SUBQUERY를 사용하여 삭제
DELETE FROM EMP01
WHERE DEPTNO = (SELECT DEPTNO FROM DEPT WHERE DNAME = 'SALES');

SELECT * FROM EMP01;












